#! /bin/bash

#####
# Script to run chrombpnet model pipeline across multiple fragment files as a SLURM array job
# USAGE: sbatch \
#--job-name=chrombpnet_pipeline \
#--account carter-gpu \
#--partition carter-gpu \
#--gpus=a30:1 \
#--output slurm_logs/%x.%A.%a.out \
#--mem=128G \
#-n 4 \
#-t 02-00:00:00 \
#--array=1-12%12 \
#chrombpnet_pipeline.sh
#####

date
echo -e "Job ID: $SLURM_JOB_ID\n"

# Set-up env
source activate chrombpnet
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/cellar/users/aklie/opt/miniconda3/envs/chrombpnet/lib
python -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"

# file lists
beta={}
{}
{}
{}
{}
{}
{}
{}

# Grab each for this SLURM task
celltype=${{celltypes[$SLURM_ARRAY_TASK_ID - 1]}}
fragment=${{fragments[$SLURM_ARRAY_TASK_ID - 1]}}
peak=${{peaks[$SLURM_ARRAY_TASK_ID - 1]}}
fold=${{folds[$SLURM_ARRAY_TASK_ID - 1]}}
negative=${{negatives[$SLURM_ARRAY_TASK_ID - 1]}}
bias_model=${{bias_models[$SLURM_ARRAY_TASK_ID - 1]}}
output_dir=${{output_dirs[$SLURM_ARRAY_TASK_ID - 1]}}

# echo the celltype and peak
echo -e "Celltype: $celltype"
echo -e "Fragment: $fragment"
echo -e "Peakset: $peak"
echo -e "Fold: $fold"
echo -e "Negatives: $negative"
echo -e "Bias model: $bias_model"
echo -e "Output directory: $output_dir\n"

# make the output directory
mkdir -p $output_dir

# Run cmd
cmd="chrombpnet pipeline \
-ifrag $fragment \
-d "ATAC" \
-g {} \
-c {} \
-p $peak \
-n $negative \
-fl {}/fold_${{fold}}.json \
-b $bias_model \
-o $output_dir"
echo -e "Running command:\n$cmd\n"
eval $cmd

# Date
date
